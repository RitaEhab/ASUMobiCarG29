int front_left = 9;
int back_left = 10;
int front_right = 11;
int back_right = 12;
char command;
const int trigPin = 6;
const int echoPin = 5;
long duration;
int distance;
float MinimumDistance;
int vcc=A1;
int gnd =A0;
//int s1;
//int s2 ;
//int s3 ;


void setup() {
 Serial.begin (9600);
 pinMode(trigPin, OUTPUT);
 pinMode(echoPin, INPUT);
 pinMode(front_left, OUTPUT);
 pinMode(back_left, OUTPUT);
 pinMode(front_right, OUTPUT);
 pinMode(back_right, OUTPUT);
 //pinMode(vcc, OUTPUT);
 //pinMode(gnd, OUTPUT);
}
float ultrasonic(){
  // Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance
distance= duration*0.034/2;
// Prints the distance on the Serial Monitor
//Serial.print("Distance: ");
//Serial.println(distance);
return distance; 
}

void go_forward()
{
digitalWrite(front_left,HIGH); // turn forward motor on
digitalWrite(front_right,HIGH); // turn front motor on
digitalWrite(back_left,LOW); // turn reverse motor off
digitalWrite(back_right,LOW); // turn back motor off
}

void go_rvrs()
{
digitalWrite(front_left,LOW); // turn forward motor off
digitalWrite(front_right,LOW); // turn front motor off
digitalWrite(back_left,HIGH); // turn reverse motor on
digitalWrite(back_right,HIGH); // turn back motor on
}

void stop_car()
{
digitalWrite(front_left,LOW); // turn reverse motor off
digitalWrite(front_right,LOW); // turn forward motor off
digitalWrite(back_left,LOW);
digitalWrite(back_right,LOW);
}
void go_Left()
{
digitalWrite(front_left,LOW); // turn forward motor on
digitalWrite(front_right,HIGH); // turn back motor on
digitalWrite(back_left,HIGH); // turn reverse motor off  
digitalWrite(back_right,LOW); // turn front motor off
}
void go_right()
{
digitalWrite(front_left,HIGH); // turn forward motor off
digitalWrite(front_right,LOW); // turn back motor oFF
digitalWrite(back_left,LOW); // turn reverse motor on  
digitalWrite(back_right,HIGH); // turn front motor on
}


void loop ()
{
  // s1=digitalRead(7);
// s2=digitalRead(6); 
// s3=digitalRead(5);
digitalWrite(vcc,HIGH);
digitalWrite(gnd,HIGH);
if (Serial.available()>0)
{
command=Serial.read();


 MinimumDistance =0;
   


switch(command)
{
 
 case 'B':
  go_rvrs();
 break;
 
 case 'F':
  
  go_forward();
  MinimumDistance =  ultrasonic();
  if (  MinimumDistance <  30)

 stop_car();
 break;
  
 

 case 'L':
go_Left();


MinimumDistance =  ultrasonic();
if (  MinimumDistance <  30)
{
 stop_car();
  
} 
break;


 case 'R':
 MinimumDistance =  ultrasonic();
if ( MinimumDistance <  30)
{
 stop_car();
  
}

 go_right();
  

break;
   


 case 'S':

stop_car();
  
 break;

}


}
}
