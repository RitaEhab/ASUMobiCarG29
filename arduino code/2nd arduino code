/*#defin
e echoPin 7 // Echo Pin
#define trigPin 8 // Trigger Pin
#define Pin 9
#define Pin 10
#define Pin 11
#define Pin 12
char command;
int maximumRange = 55; // Maximum range needed
int minimumRange = 0; // Minimum range needed
long duration, distance; // Duration used to calculate distance

int front_left = 9;
int back_left = 10;
int front_right = 11;
int back_right = 12;

void setup() {
Serial.begin (9600);
// pinMode(trigPin, OUTPUT);
// pinMode(echoPin, INPUT);
pinMode(front_left, OUTPUT);
pinMode(back_left, OUTPUT);
pinMode(front_right, OUTPUT);
pinMode(back_right, OUTPUT);
}

void go_forward()
{
digitalWrite(front_left,HIGH); // turn forward motor on
digitalWrite(front_right,HIGH); // turn front motor on
digitalWrite(back_left,LOW); // turn reverse motor off
digitalWrite(back_right,LOW); // turn back motor off
}

void go_rvrs()
{
digitalWrite(front_left,LOW); // turn forward motor off
digitalWrite(front_right,LOW); // turn front motor off
digitalWrite(back_left,HIGH); // turn reverse motor on
digitalWrite(back_right,HIGH); // turn back motor on
}

void stop_car()
{
digitalWrite(front_left,LOW); // turn reverse motor off
digitalWrite(front_right,LOW); // turn forward motor off
digitalWrite(back_left,LOW);
digitalWrite(back_right,LOW);
}
void go_right()
{
digitalWrite(front_left,HIGH); // turn forward motor on
digitalWrite(front_right,LOW); // turn back motor on
digitalWrite(back_left,HIGH); // turn reverse motor off
digitalWrite(back_right,LOW); // turn front motor off
}
void go_Left()
{
digitalWrite(front_left,LOW); // turn forward motor off
digitalWrite(front_right,HIGH); // turn back motor oFF
digitalWrite(back_left,LOW); // turn reverse motor on
digitalWrite(back_right,HIGH); // turn front motor on
}

// the loop() method runs over and over again,
// as long as the Arduino has power
void loop()
{

// The following trigPin/echoPin cycle is used to determine the
// distance of the nearest object by bouncing soundwaves off of it.

//digitalWrite(trigPin, LOW);
//delayMicroseconds(2);
if (Serial.available()>0)
{
command=Serial.read();
// stop_car();
switch(command)
{
case 'F':
go_forward();
break;
case 'B':
go_rvrs();
break;
case'L':
go_Left();
break;
case'R':
go_right();
break;

}
}
}
